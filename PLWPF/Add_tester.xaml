<UserControl x:Name="UC_AddTester" x:Class="PLWPF.Add_tester"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:PLWPF"
             xmlns:extensions="using:Microsoft.Toolkit.Uwp.UI.Extensions"
             mc:Ignorable="d" 
             xmlns:jas="clr-namespace:System.Text.RegularExpressions;assembly=System"
             d:DesignHeight="300" d:DesignWidth="300" BorderThickness="1" BorderBrush="Black" Background="LightGray" Loaded="UserControl_Loaded">
    <UserControl.Resources>
        <Style TargetType="{x:Type ComboBox}" x:Key="StyleListSelectedValidComboBox">
            <Setter Property="Validation.ErrorTemplate">
                <Setter.Value>
                    <ControlTemplate>
                        <DockPanel LastChildFill="True">
                            <TextBlock DockPanel.Dock="Top" Foreground="Red" FontSize="12pt"
                                Text="{Binding ElementName=MyAdorner, 
                                Path=AdornedElement.(Validation.Errors)[0].ErrorContent}">
                            </TextBlock>
                            <Border BorderBrush="Red" BorderThickness="1">
                                <AdornedElementPlaceholder Name="MyAdorner" />
                            </Border>
                        </DockPanel>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="{x:Type DatePicker}" x:Key="StyleDatimeValidDatePicker">
            <Setter Property="Validation.ErrorTemplate">
                <Setter.Value>
                    <ControlTemplate>
                        <DockPanel LastChildFill="True">
                            <TextBlock DockPanel.Dock="Top" Foreground="Red" FontSize="12pt"
                                Text="{Binding ElementName=MyAdorner, 
                                Path=AdornedElement.(Validation.Errors)[0].ErrorContent}">
                            </TextBlock>
                            <Border BorderBrush="Red" BorderThickness="1">
                                <AdornedElementPlaceholder Name="MyAdorner" />
                            </Border>
                        </DockPanel>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="mystyleTextbox" TargetType="TextBox">
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="HorizontalAlignment" Value="Stretch"/>
            <Setter Property="Margin" Value="1"/>
        </Style>
        <Style TargetType="{x:Type TextBox}" x:Key="StyleLengthValidTextBox" BasedOn="{StaticResource mystyleTextbox}">
            <Setter Property="Validation.ErrorTemplate">
                <Setter.Value>
                    <ControlTemplate>
                        <DockPanel LastChildFill="True">
                            <TextBlock DockPanel.Dock="Top" Foreground="Red" FontSize="12pt"
                                Text="{Binding ElementName=MyAdorner, 
                                Path=AdornedElement.(Validation.Errors)[0].ErrorContent}">
                            </TextBlock>
                            <Border BorderBrush="Red" BorderThickness="1">
                                <AdornedElementPlaceholder Name="MyAdorner" />
                            </Border>
                        </DockPanel>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="mystyleLabel" TargetType="Label">
            <Setter Property="Background" Value="Gray"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="HorizontalAlignment" Value="Stretch"/>
            <Setter Property="Margin" Value="1"/>
        </Style>
        <Style x:Key="stylHeaderdatagrid" TargetType="DataGridColumnHeader">
            <Setter Property="Background" Value="LightGray"/>
            <Setter Property="FontStyle" Value="Italic"/>
            <Setter Property="FontWeight" Value="Bold"/>
        </Style>
        <Style x:Key="mystyledatagrid" TargetType="DataGrid">
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="ColumnHeaderStyle" Value="{StaticResource stylHeaderdatagrid}"/>
            <Setter Property="BorderBrush" Value="Gray"/>
            <Setter Property="BorderThickness" Value="3"/>
        </Style>
    </UserControl.Resources>
    <Grid Background="White" Margin="3,3,3,3">
        <Grid.RowDefinitions>
            <RowDefinition Height="30*"/>
            <RowDefinition Height="200*"/>
            <RowDefinition Height="30*"/>
        </Grid.RowDefinitions>
        <Grid Grid.Row="1">
            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Label Name="label_tester_ID" Content="ID:" Style="{StaticResource mystyleLabel}"/>
            <Label Name="label_tester_firstName" Content="First name:" Grid.Row="1" Style="{StaticResource mystyleLabel}"/>
            <Label Name="label_tester_lastName" Content="Last name:" Grid.Row="2" Style="{StaticResource mystyleLabel}"/>
            <Label Name="label_tester_birthday" Content="Birthday:" Grid.Row="3" Style="{StaticResource mystyleLabel}"/>
            <Label Name="label_tester_phone" Content="Phone:" Grid.Row="4" Style="{StaticResource mystyleLabel}"/>
            <Label Name="label_tester_Adrress" Content="Adrress:" Grid.Column="2" Grid.Row="3" Style="{StaticResource mystyleLabel}"/>
            <Label Name="label_tester_MaxTest" Content="Max test:" Grid.Column="2" Style="{StaticResource mystyleLabel}"/>
            <Label Name="label_tester_TypeCar" Content="Type car:" Grid.Column="2" Grid.Row="1" Style="{StaticResource mystyleLabel}"/>
            <Label Name="label_tester_Workday" Content="Work day:" Grid.Column="2" Grid.Row="2" Style="{StaticResource mystyleLabel}"/>
            <Label Name="label_tester_Experience" Content="Experience:" Grid.Column="2" Grid.Row="4" Style="{StaticResource mystyleLabel}"/>

            <TextBox Name="text_tester_ID" Grid.Column="1"  Grid.Row="0" Style="{StaticResource StyleLengthValidTextBox}">
                <Binding Path=".ID" UpdateSourceTrigger="PropertyChanged">
                    <Binding.ValidationRules>
                        <local:IntZeoutValidationRule 
                            MinimumLength="9" MaximumLength="9" ErrorMessage="Teoudat Zeout ID required, 9 Digits" />
                    </Binding.ValidationRules>
                </Binding>
            </TextBox>
            <TextBox  Name="text_tester_firstName" Grid.Column="1" Grid.Row="1" Style="{StaticResource StyleLengthValidTextBox}">
                <Binding Path=".FirstName" UpdateSourceTrigger="PropertyChanged">
                    <Binding.ValidationRules>
                        <local:StringRangeValidationRule 
                            MinimumLength="1" MaximumLength="20"/>
                        <!--ErrorMessage=""-->
                    </Binding.ValidationRules>
                </Binding>
            </TextBox>
            <TextBox Name="text_tester_lastName" Grid.Column="1" Grid.Row="2" Style="{StaticResource StyleLengthValidTextBox}">
                <Binding Path=".LastName" UpdateSourceTrigger="PropertyChanged">
                    <Binding.ValidationRules>
                        <local:StringRangeValidationRule 
                            MinimumLength="1" MaximumLength="20"/>
                        <!--ErrorMessage=""-->
                    </Binding.ValidationRules>
                </Binding>
            </TextBox>
            <DatePicker SelectedDate="{Binding Path=BirthDay}" Style="{StaticResource StyleDatimeValidDatePicker}" Name="datepicker_tester_birthday" HorizontalAlignment="Center" VerticalAlignment="Center" Grid.Column="1" Grid.Row="3" Margin="1">
                <!--<DatePicker.SelectedDate>
                    <Binding Path=".BirthDay" UpdateSourceTrigger="PropertyChanged">
                        <Binding.ValidationRules>
                            <local:DateTimeValidationRule
                                ErrorMessage="Tester age minimum 30 maximum 65 years old" />
                        </Binding.ValidationRules>
                    </Binding>
                </DatePicker.SelectedDate>-->
            </DatePicker>
            <TextBox Name="text_tester_phone" Grid.Column="1" Grid.Row="4" Style="{StaticResource StyleLengthValidTextBox}">
                <Binding Path=".Phone" UpdateSourceTrigger="PropertyChanged">
                    <Binding.ValidationRules>
                        <local:RegexValidationRule 
                           RegexText="^\+?(972|0)(\-)?0?(([23489]{1}\d{7})|[5]{1}\d{8})$"
                           ErrorMessage="Invalid phone number"
                           RegexOptions="IgnoreCase"/>
                    </Binding.ValidationRules>
                </Binding>
            </TextBox>
            <Button Name="button_tester_Adrress" HorizontalAlignment="Stretch" VerticalAlignment="Center" Grid.Column="3" Grid.Row="3" Margin="5" Click="button_tester_Adrress_Click">
                <StackPanel>
                    <Label Content="address"/>
                    <Popup Name="myPopup_Address" StaysOpen="False">
                        <Border Background="White" Height="100" Width="150" BorderThickness="3" BorderBrush="LightGray">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*"/>
                                    <RowDefinition Height="*"/>
                                    <RowDefinition Height="*"/>
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="auto"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <Label Content="City:" Style="{StaticResource mystyleLabel}"/>
                                <TextBox Grid.Column="1" Name="text_City" Style="{StaticResource mystyleTextbox}"/>
                                <Label Grid.Row="1" Content="Num:" Style="{StaticResource mystyleLabel}"/>
                                <TextBox Name="text_Num" Grid.Column="1" Grid.Row="1" Style="{StaticResource mystyleTextbox}"/>
                                <Label Grid.Row="2" Content="Street:" Style="{StaticResource mystyleLabel}"/>
                                <TextBox Grid.Column="1" Name="text_Street" Grid.Row="2" Style="{StaticResource mystyleTextbox}"/>
                            </Grid>
                        </Border>
                    </Popup>
                </StackPanel>
            </Button>
            <ComboBox Name="combo_tester_MaxTest" Style="{StaticResource StyleListSelectedValidComboBox}" HorizontalAlignment="Stretch" VerticalAlignment="Center" Grid.Column="3" Margin="1">
                <ComboBox.SelectedIndex>
                    <Binding Path=".Max_test" UpdateSourceTrigger="PropertyChanged">
                        <Binding.ValidationRules>
                            <local:ListIsSelectedValidationRule
                                ErrorMessage="A Selection is required" />
                        </Binding.ValidationRules>
                    </Binding>
                </ComboBox.SelectedIndex>
            </ComboBox>
            <ComboBox Name="combo_tester_TypeCar" Style="{StaticResource StyleListSelectedValidComboBox}" HorizontalAlignment="Stretch" VerticalAlignment="Center" Grid.Column="3" Grid.Row="1" Margin="1">
                <ComboBox.SelectedValue>
                    <Binding Path=".Type_car" UpdateSourceTrigger="PropertyChanged">
                        <Binding.ValidationRules>
                            <local:ListIsSelectedValidationRule
                                ErrorMessage="A Selection is required" />
                        </Binding.ValidationRules>
                    </Binding>
                </ComboBox.SelectedValue>
            </ComboBox>
            <Button Name="button_tester_Workday" HorizontalAlignment="Stretch" VerticalAlignment="Center" Grid.Column="3" Grid.Row="2" Margin="8" Click="button_tester_Workday_Click">
                <StackPanel>
                    <Label Content="Pick your hours"/>
                    <Popup Name="myPopupWorkday" StaysOpen="False">
                        <DataGrid Name="dataGrid_WorkDay" ItemsSource="{Binding}" Style="{StaticResource mystyledatagrid}"
                                  BorderBrush="LightGray" BorderThickness="1"/>
                    </Popup>
                </StackPanel>
            </Button>
            <ComboBox Name="combo_tester_Experience" Style="{StaticResource StyleListSelectedValidComboBox}" HorizontalAlignment="Stretch" VerticalAlignment="Center" Grid.Column="3" Grid.Row="4" Margin="1">
                <ComboBox.SelectedValue>
                    <Binding Path=".Xp" UpdateSourceTrigger="PropertyChanged">
                        <Binding.ValidationRules>
                            <local:ListIsSelectedValidationRule
                                ErrorMessage="A Selection is required" />
                        </Binding.ValidationRules>
                    </Binding>
                </ComboBox.SelectedValue>
            </ComboBox>
        </Grid>
        <Label Content="Add Tester" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" Background="LightGray"/>
        <Button Name="button_tester_add" Grid.Row="2" Content="Add the tester" Click="button_tester_add_Click" HorizontalAlignment="Center" VerticalAlignment="Center">
        </Button>
    </Grid>
</UserControl>
