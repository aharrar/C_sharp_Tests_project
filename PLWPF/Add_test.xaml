<UserControl x:Class="PLWPF.Add_test"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:PLWPF"
             mc:Ignorable="d" 
             d:DesignHeight="300" d:DesignWidth="382" MinWidth="382" BorderThickness="1" BorderBrush="Black" Background="LightGray">
    <UserControl.Resources>
        <Style TargetType="{x:Type ComboBox}" x:Key="StyleListSelectedValidComboBox">
            <Setter Property="Validation.ErrorTemplate">
                <Setter.Value>
                    <ControlTemplate>
                        <DockPanel LastChildFill="True">
                            <TextBlock DockPanel.Dock="Top" Foreground="Red" FontSize="12pt"
                                Text="{Binding ElementName=MyAdorner, 
                                Path=AdornedElement.(Validation.Errors)[0].ErrorContent}">
                            </TextBlock>
                            <Border BorderBrush="Red" BorderThickness="1">
                                <AdornedElementPlaceholder Name="MyAdorner" />
                            </Border>
                        </DockPanel>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--<Style TargetType="{x:Type DatePicker}" x:Key="DateTimeValidationRule">
            <Setter Property="Validation.ErrorTemplate">
                <Setter.Value>
                    <ControlTemplate>
                        <DockPanel LastChildFill="True">
                            <TextBlock DockPanel.Dock="Top" Foreground="Red" FontSize="12pt"
                                Text="{Binding ElementName=MyAdorner, 
                                Path=AdornedElement.(Validation.Errors)[0].ErrorContent}">
                            </TextBlock>
                            <Border BorderBrush="Red" BorderThickness="1">
                                <AdornedElementPlaceholder Name="MyAdorner" />
                            </Border>
                        </DockPanel>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>-->
        <Style TargetType="{x:Type DatePicker}" x:Key="StyleDatimeValidDatePicker">
            <Setter Property="Validation.ErrorTemplate">
                <Setter.Value>
                    <ControlTemplate>
                        <DockPanel LastChildFill="True">
                            <TextBlock DockPanel.Dock="Top" Foreground="Red" FontSize="12pt"
                                Text="{Binding ElementName=MyAdorner, 
                                Path=AdornedElement.(Validation.Errors)[0].ErrorContent}">
                            </TextBlock>
                            <Border BorderBrush="Red" BorderThickness="1">
                                <AdornedElementPlaceholder Name="MyAdorner" />
                            </Border>
                        </DockPanel>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="mystyleTextbox" TargetType="TextBox">
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="HorizontalAlignment" Value="Stretch"/>
            <Setter Property="Margin" Value="1"/>
        </Style>
        <Style TargetType="{x:Type TextBox}" x:Key="StyleLengthValidTextBox" BasedOn="{StaticResource mystyleTextbox}">
            <Setter Property="Validation.ErrorTemplate">
                <Setter.Value>
                    <ControlTemplate>
                        <DockPanel LastChildFill="True">
                            <TextBlock DockPanel.Dock="Top" Foreground="Red" FontSize="12pt"
                                Text="{Binding ElementName=MyAdorner, 
                                Path=AdornedElement.(Validation.Errors)[0].ErrorContent}">
                            </TextBlock>
                            <Border BorderBrush="Red" BorderThickness="1">
                                <AdornedElementPlaceholder Name="MyAdorner" />
                            </Border>
                        </DockPanel>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="mystyleLabel" TargetType="Label">
            <Setter Property="Background" Value="Gray"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="HorizontalAlignment" Value="Stretch"/>
            <Setter Property="Margin" Value="1"/>
        </Style>
        <Style x:Key="stylHeaderdatagrid" TargetType="DataGridColumnHeader">
            <Setter Property="Background" Value="LightGray"/>
            <Setter Property="FontStyle" Value="Italic"/>
            <Setter Property="FontWeight" Value="Bold"/>
        </Style>
        <Style x:Key="mystyledatagrid" TargetType="DataGrid">
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="ColumnHeaderStyle" Value="{StaticResource stylHeaderdatagrid}"/>
            <Setter Property="BorderBrush" Value="Gray"/>
            <Setter Property="BorderThickness" Value="3"/>
        </Style>
    </UserControl.Resources>
    <Grid Background="White" Margin="3,3,3,3">
        <Grid.RowDefinitions>
            <RowDefinition Height="30*"/>
            <RowDefinition Height="200*"/>
            <RowDefinition Height="30*"/>
        </Grid.RowDefinitions>
        <Grid Grid.Row="1">
            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" MaxWidth="95"/>
                <ColumnDefinition Width="*" MaxWidth="95"/>
                <ColumnDefinition Width="*" MaxWidth="95"/>
                <ColumnDefinition Width="*" MaxWidth="95"/>
            </Grid.ColumnDefinitions>
            <Label Name="label_test_traineeID" Content="Trainee ID:"  Grid.Row="0" Style="{StaticResource mystyleLabel}"/>
            <Label Name="label_test_date" Content="Date:" Grid.Row="1" Style="{StaticResource mystyleLabel}"/>
            <Label Name="label_test_typecar" Content="Type car:" Grid.Column="2" Style="{StaticResource mystyleLabel}"/>
            <Label Name="label_test_adrressStart" Content="Adrress start:" Grid.Column="2" Grid.Row="1" Style="{StaticResource mystyleLabel}"/>
            <Label Name="label_test_adrressEnd" Content="Adrress end:" Grid.Column="2" Grid.Row="2" Style="{StaticResource mystyleLabel}"/>
            <Label Name="label_test_hour" Content="Hour:" Grid.Row="2" Style="{StaticResource mystyleLabel}"/>

            <ComboBox Name="combo_test_hour" Grid.Column="1" Grid.Row="2" HorizontalAlignment="Stretch" VerticalAlignment="Center" Margin="1" Style="{StaticResource StyleListSelectedValidComboBox}">
                <ComboBox.SelectedIndex>
                    <Binding Path=".Hour" UpdateSourceTrigger="PropertyChanged">
                        <Binding.ValidationRules>
                            <local:ListIsSelectedValidationRule
                                ErrorMessage="A Selection is required" />
                        </Binding.ValidationRules>
                    </Binding>
                </ComboBox.SelectedIndex>
            </ComboBox>
            <TextBox Name="text_test_traineeID" Grid.Column="1" Grid.Row="0" Style="{StaticResource StyleLengthValidTextBox}">
                <Binding Path=".ID_trainee" UpdateSourceTrigger="PropertyChanged">
                    <Binding.ValidationRules>
                        <local:IntZeoutValidationRule 
                            MinimumLength="9" MaximumLength="9" ErrorMessage="Teoudat Zeout ID required, 9 Digits" />
                    </Binding.ValidationRules>
                </Binding>
            </TextBox>
            <DatePicker SelectedDate="{Binding Path=Date_test}" Name="datepicker_test_date" HorizontalAlignment="Stretch" VerticalAlignment="Center" Grid.Column="1" Grid.Row="1" Margin="1">
                <!--<DatePicker.SelectedDate>
                   <Binding Path=".Date_test" UpdateSourceTrigger="PropertyChanged">
                        <Binding.ValidationRules>
                            <local:DateTimeValidationRule
                                ErrorMessage="the date has already passed!" />
                        </Binding.ValidationRules>
                    </Binding>
                </DatePicker.SelectedDate>-->
            </DatePicker>
            <ComboBox Name="combo_test_typecar" HorizontalAlignment="Stretch" VerticalAlignment="Center" Grid.Column="3" Margin="1" Style="{StaticResource StyleListSelectedValidComboBox}">
                <ComboBox.SelectedValue>
                    <Binding Path=".typeCar" UpdateSourceTrigger="PropertyChanged">
                        <Binding.ValidationRules>
                            <local:ListIsSelectedValidationRule
                                ErrorMessage="A Selection is required" />
                        </Binding.ValidationRules>
                    </Binding>
                </ComboBox.SelectedValue>
            </ComboBox>
            <Button Name="button_tester_AdrresStart" HorizontalAlignment="Stretch" VerticalAlignment="Center" Grid.Column="3" Grid.Row="1" Margin="5" Click="button_tester_AdrresStart_Click">
                <StackPanel>
                    <Label Content="address start"/>
                    <Popup Name="myPopup_AddresStart" StaysOpen="False">
                        <Border Background="White" Height="100" Width="150" BorderThickness="3" BorderBrush="LightGray">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*"/>
                                    <RowDefinition Height="*"/>
                                    <RowDefinition Height="*"/>
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="auto"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <Label Content="City:" Style="{StaticResource mystyleLabel}"/>
                                <TextBox Grid.Column="1" Name="text_City_AddS" Style="{StaticResource mystyleTextbox}"/>
                                <Label Grid.Row="1" Content="Num:" Style="{StaticResource mystyleLabel}"/>
                                <TextBox Name="text_Num_AddS" Grid.Column="1" Grid.Row="1" Style="{StaticResource mystyleTextbox}"/>
                                <Label Grid.Row="2" Content="Street:" Style="{StaticResource mystyleLabel}"/>
                                <TextBox Grid.Column="1" Name="text_Street_AddS" Grid.Row="2" Style="{StaticResource mystyleTextbox}"/>
                            </Grid>
                        </Border>
                    </Popup>
                </StackPanel>
            </Button>
            <Button Name="button_tester_AdrressEnd" HorizontalAlignment="Stretch" VerticalAlignment="Center" Grid.Column="3" Grid.Row="2" Margin="5" Click="button_tester_AdrressEnd_Click">
                <StackPanel>
                    <Label Content="address end"/>
                    <Popup Name="myPopup_AddressEnd" StaysOpen="False">
                        <Border Background="White" Height="100" Width="150" BorderThickness="3" BorderBrush="LightGray">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*"/>
                                    <RowDefinition Height="*"/>
                                    <RowDefinition Height="*"/>
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="auto"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <Label Content="City:" Style="{StaticResource mystyleLabel}"/>
                                <TextBox Grid.Column="1" Name="text_City_AddE" Style="{StaticResource mystyleTextbox}"/>
                                <Label Grid.Row="1" Content="Num:" Style="{StaticResource mystyleLabel}"/>
                                <TextBox Name="text_Num_AddE" Grid.Column="1" Grid.Row="1" Style="{StaticResource mystyleTextbox}"/>
                                <Label Grid.Row="2" Content="Street:" Style="{StaticResource mystyleLabel}"/>
                                <TextBox Grid.Column="1" Name="text_Street_AddE" Grid.Row="2" Style="{StaticResource mystyleTextbox}"/>
                            </Grid>
                        </Border>
                    </Popup>
                </StackPanel>
            </Button>
        </Grid>
        <Label Content="Add test" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" Background="LightGray"/>
        <Button Name="button_test_add" Click="button_test_add_Click" Grid.Row="2" Content="Add the test" HorizontalAlignment="Center" VerticalAlignment="Center"/>
    </Grid>
</UserControl>
