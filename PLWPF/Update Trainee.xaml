<Window x:Class="PLWPF.Update_Trainee"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:myBE="clr-namespace:BE;assembly=BE"
        xmlns:sys="clr-namespace:System;assembly=mscorlib"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:PLWPF"
        mc:Ignorable="d" Name="myWin"
        Title="Update" Closed="myWin_Closed" d:DesignHeight="300" MaxHeight="300" d:DesignWidth="300" MaxWidth="300" BorderThickness="1" BorderBrush="Black" Background="LightGray">
    <Window.Resources>
        <ObjectDataProvider MethodName="GetValues" ObjectType="{x:Type sys:Enum}" x:Key="GetEnumGender">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="myBE:Gender"/>
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>
        <Style TargetType="{x:Type ComboBox}" x:Key="StyleListSelectedValidComboBox">
            <Setter Property="Validation.ErrorTemplate">
                <Setter.Value>
                    <ControlTemplate>
                        <DockPanel LastChildFill="True">
                            <TextBlock DockPanel.Dock="Top" Foreground="Red" FontSize="12pt"
                                Text="{Binding ElementName=MyAdorner, 
                                Path=AdornedElement.(Validation.Errors)[0].ErrorContent}">
                            </TextBlock>
                            <Border BorderBrush="Red" BorderThickness="1">
                                <AdornedElementPlaceholder Name="MyAdorner" />
                            </Border>
                        </DockPanel>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="{x:Type DatePicker}" x:Key="StyleDatimeValidDatePicker">
            <Setter Property="Validation.ErrorTemplate">
                <Setter.Value>
                    <ControlTemplate>
                        <DockPanel LastChildFill="True">
                            <TextBlock DockPanel.Dock="Top" Foreground="Red" FontSize="12pt"
                                Text="{Binding ElementName=MyAdorner, 
                                Path=AdornedElement.(Validation.Errors)[0].ErrorContent}">
                            </TextBlock>
                            <Border BorderBrush="Red" BorderThickness="1">
                                <AdornedElementPlaceholder Name="MyAdorner" />
                            </Border>
                        </DockPanel>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="mystyleTextbox" TargetType="TextBox">
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="HorizontalAlignment" Value="Stretch"/>
            <Setter Property="Margin" Value="1"/>
        </Style>
        <Style TargetType="{x:Type TextBox}" x:Key="StyleLengthValidTextBox" BasedOn="{StaticResource mystyleTextbox}">
            <Setter Property="Validation.ErrorTemplate">
                <Setter.Value>
                    <ControlTemplate>
                        <DockPanel LastChildFill="True">
                            <TextBlock DockPanel.Dock="Top" Foreground="Red" FontSize="12pt"
                                Text="{Binding ElementName=MyAdorner, 
                                Path=AdornedElement.(Validation.Errors)[0].ErrorContent}">
                            </TextBlock>
                            <Border BorderBrush="Red" BorderThickness="1">
                                <AdornedElementPlaceholder Name="MyAdorner" />
                            </Border>
                        </DockPanel>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="mystyleLabel" TargetType="Label">
            <Setter Property="Background" Value="Gray"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="HorizontalAlignment" Value="Stretch"/>
            <Setter Property="Margin" Value="1"/>
        </Style>
        <Style x:Key="stylHeaderdatagrid" TargetType="DataGridColumnHeader">
            <Setter Property="Background" Value="LightGray"/>
            <Setter Property="FontStyle" Value="Italic"/>
            <Setter Property="FontWeight" Value="Bold"/>
        </Style>
        <Style x:Key="mystyledatagrid" TargetType="DataGrid">
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="ColumnHeaderStyle" Value="{StaticResource stylHeaderdatagrid}"/>
            <Setter Property="BorderBrush" Value="Gray"/>
            <Setter Property="BorderThickness" Value="3"/>
        </Style>
    </Window.Resources>
    <Grid Name="UpdateTrainee" Background="White" Margin="3">
        <Grid.RowDefinitions>
            <RowDefinition Height="30*"/>
            <RowDefinition Height="200*"/>
            <RowDefinition Height="30*"/>
        </Grid.RowDefinitions>
        <Grid Grid.Row="1">
            <Grid.RowDefinitions>
                <RowDefinition Height="*" />
                <RowDefinition Height="*"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" MaxWidth="95"/>
                <ColumnDefinition Width="*" MaxWidth="95"/>
                <ColumnDefinition Width="*" MaxWidth="95"/>
                <ColumnDefinition Width="*" MaxWidth="95"/>
            </Grid.ColumnDefinitions>
            <Label Name="label_trainee_ID" Content="ID:" Margin="1" Style="{StaticResource mystyleLabel}"/>
            <Label Name="label_trainee_Name" Content="Name:" Grid.Row="1" Style="{StaticResource mystyleLabel}"/>
            <Label Name="label_trainee_birthday" Content="Birthday:" Grid.Row="2" Style="{StaticResource mystyleLabel}"/>
            <Label Name="label_trainee_phone" Content="Phone:" Grid.Column="2" Style="{StaticResource mystyleLabel}"/>
            <Label Name="label_trainee_Adrress" Content="Adrress:" Grid.Column="2" Grid.Row="1" Style="{StaticResource mystyleLabel}"/>
            <Label Name="label_trainee_Gender" Content="Gender:" Grid.Column="2" Grid.Row="2" Style="{StaticResource mystyleLabel}"/>

            <TextBox Name="text_trainee_ID" Text="{Binding Path=ID}" IsEnabled="False" Grid.Column="1" Style="{StaticResource StyleLengthValidTextBox}">
                <!--<Binding Path=".ID" UpdateSourceTrigger="PropertyChanged">
                    <Binding.ValidationRules>
                        <local:IntZeoutValidationRule 
                            MinimumLength="9" MaximumLength="9" ErrorMessage="Teoudat Zeout ID required, 9 Digits" />
                    </Binding.ValidationRules>
                </Binding>-->
            </TextBox>
            <TextBox Name="text_trainee_Name" Grid.Column="1" Grid.Row="1" Style="{StaticResource StyleLengthValidTextBox}">
                <Binding Path=".Name" UpdateSourceTrigger="PropertyChanged">
                    <Binding.ValidationRules>
                        <local:StringRangeValidationRule 
                            MinimumLength="1" MaximumLength="20"/>
                        <!--ErrorMessage=""-->
                    </Binding.ValidationRules>
                </Binding>
            </TextBox>
            <DatePicker SelectedDate="{Binding Path=BirthDay}" Name="datepicker_trainee_birthday" HorizontalAlignment="Center" VerticalAlignment="Center" Grid.Column="1" Grid.Row="2" Margin="1" Style="{StaticResource StyleDatimeValidDatePicker}"/>
            <TextBox Name="text_trainee_phone" Grid.Column="3" Style="{StaticResource StyleLengthValidTextBox}">
                <Binding Path=".Phone" UpdateSourceTrigger="PropertyChanged">
                    <Binding.ValidationRules>
                        <local:RegexValidationRule 
                           RegexText="^\+?(972|0)(\-)?0?(([23489]{1}\d{7})|[5]{1}\d{8})$"
                           ErrorMessage="Invalid phone number"
                           RegexOptions="IgnoreCase"/>
                    </Binding.ValidationRules>
                </Binding>
            </TextBox>
            <ComboBox Name="combo_trainee_Gender"  HorizontalAlignment="Stretch" VerticalAlignment="Center" Grid.Column="3" Grid.Row="2" Margin="1" Style="{StaticResource StyleListSelectedValidComboBox}">
                <ComboBox.SelectedValue>
                    <Binding Path=".gender" UpdateSourceTrigger="PropertyChanged">
                        <Binding.ValidationRules>
                            <local:ListIsSelectedValidationRule
                                ErrorMessage="A Selection is required" />
                        </Binding.ValidationRules>
                    </Binding>
                </ComboBox.SelectedValue>
            </ComboBox>
            <Button Name="button_trainee_Adrress" HorizontalAlignment="Stretch" VerticalAlignment="Center" Grid.Column="3" Grid.Row="1" Margin="3,23,3,23" Click="button_trainee_Adrress_Click">
                <StackPanel>
                    <Label Content="address"/>
                    <Popup Name="myPopup" StaysOpen="False">
                        <Border Background="White" Height="100" Width="150" BorderThickness="3" BorderBrush="LightGray">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*"/>
                                    <RowDefinition Height="*"/>
                                    <RowDefinition Height="*"/>
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="auto"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <Label Content="City:" Style="{StaticResource mystyleLabel}"/>
                                <TextBox Grid.Column="1" Text="{Binding Path=City}" Name="text_City" Style="{StaticResource mystyleTextbox}"/>
                                <Label Grid.Row="1" Content="Num:" Style="{StaticResource mystyleLabel}"/>
                                <TextBox Name="text_Num" Text="{Binding Path=Num}" Grid.Column="1" Grid.Row="1" Style="{StaticResource mystyleTextbox}"/>
                                <Label Grid.Row="2" Content="Street:" Style="{StaticResource mystyleLabel}"/>
                                <TextBox Grid.Column="1" Text="{Binding Path=Street}" Name="text_Street" Grid.Row="2" Style="{StaticResource mystyleTextbox}"/>
                            </Grid>
                        </Border>
                    </Popup>
                </StackPanel>
            </Button>
        </Grid>
        <Label Name="title_trainee" Content="Update Trainee" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" Background="LightGray"/>
        <Button Name="button_trainee_update" Grid.Row="2" Content="Update the trainee" Click="button_trainee_update_Click" HorizontalAlignment="Center" VerticalAlignment="Center"/>
    </Grid>
</Window>
